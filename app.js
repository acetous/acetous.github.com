// Generated by CoffeeScript 1.4.0
(function() {
  var app, displayError, displayGists, displayLink, displayName, displayRepo, displayRepoList, displayUser, getLanguage, gh;

  app = function(config) {
    var link, _i, _len, _ref;
    displayName(config.user);
    displayLink({
      description: "GitHub",
      icon: "icon-github",
      url: "https://github.com/" + config.user
    });
    _ref = config.links;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      link = _ref[_i];
      displayLink(link);
    }
    gh("/users/" + config.user, function(user) {
      return displayUser(user);
    });
    gh("/users/" + config.user + "/repos?sort=updated", function(repos) {
      var repo, _j, _len1, _results;
      $("#repos .loading").remove();
      _results = [];
      for (_j = 0, _len1 = repos.length; _j < _len1; _j++) {
        repo = repos[_j];
        _results.push(displayRepo(repo));
      }
      return _results;
    });
    gh("/users/" + config.user + "/gists", function(gists) {
      $("#gists .loading").remove();
      return displayGists(gists);
    });
    gh("/users/" + config.user + "/starred", function(repos) {
      $("#starred .loading").remove();
      return displayRepoList(repos, "#starred");
    });
    return gh("/users/" + config.user + "/subscriptions", function(repos) {
      $("#watched .loading").remove();
      return displayRepoList(repos, "#watched");
    });
  };

  displayName = function(name) {
    $("#name").html(name);
    return $("title").html("" + name + " &middot; Profile");
  };

  displayLink = function(link) {
    return $("ul#links").append(Handlebars.templates.link(link));
  };

  displayUser = function(user) {
    return $("#title").html(Handlebars.templates.title(user));
  };

  displayRepo = function(repo) {
    return $("#repos").append(Handlebars.templates.repo(repo));
  };

  displayRepoList = function(repos, where) {
    return $(where).append(Handlebars.templates.repolist(repos));
  };

  displayGists = function(gists) {
    return $("#gists").append(Handlebars.templates.gists(gists));
  };

  displayError = function(error) {
    return $("#content").prepend(Handlebars.templates.error(error));
  };

  gh = function(ressource, cb) {
    ressource += ressource.indexOf("?") === -1 ? "?callback=?" : "&callback=?";
    return $.getJSON("https://api.github.com" + ressource, function(resp) {
      if (resp.meta.status === 200) {
        return cb(resp.data);
      } else {
        if (!config.error) {
          displayError("Could not load data from GitHub API. Try again later.");
          return config.error = true;
        }
      }
    });
  };

  Handlebars.registerHelper('language', function(name) {
    var extension;
    extension = name.match(/[a-z0-9]+$/i)[0];
    return new Handlebars.SafeString(getLanguage(extension));
  });

  getLanguage = function(extension) {
    return config.languages[extension] || "Text";
  };

  $(function() {
    return app(window.config);
  });

}).call(this);
